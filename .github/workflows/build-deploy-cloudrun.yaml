name: "Build and Deploy to Cloud Run"

# GAR = Google Artifact Registry

on:
  workflow_call:
    inputs: #TODO: move wif and gchat webook to secrets
      gar_project_id:
        required: true
        type: string
      gar_location:
        required: true
        type: string
      gar_repository:
        required: true
        type: string
      gar_service:
        required: true
        type: string
      gar_wif_provider:
        required: true
        type: string
      gar_wif_service_account:
        required: true
        type: string
      cloudrun_region:
        required: true
        type: string
      cloudrun_wif_provider:
        required: true
        type: string
      cloudrun_wif_service_account:
        required: true
        type: string
      cloudrun_service:
        required: true
        type: string
      google_chat_webhook:
        required: true
        type: string

env:
  PROJECT_ID: ${{ inputs.gar_project_id }}
  GAR_LOCATION: ${{ inputs.gar_location }}
  REPOSITORY: ${{ inputs.gar_repository }}
  SERVICE: ${{ inputs.gar_service }}
  WIF_PROVIDER: ${{ inputs.gar_wif_provider }}
  WIF_SERVICE_ACCOUNT: ${{ inputs.gar_wif_service_account }}
  CLOUDRUN_REGION: ${{ inputs.cloudrun_region }}
  CLOUDRUN_WIF_PROVIDER: ${{ inputs.cloudrun_wif_provider }}
  CLOUDRUN_WIF_SERVICE_ACCOUNT: ${{ inputs.cloudrun_wif_service_account }}
  CLOUDRUN_SERVICE: ${{ inputs.cloudrun_service }}
  GOOGLE_CHAT_WEBHOOK: ${{ inputs.google_chat_webhook }}

jobs:
  build:
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ env.WIF_PROVIDER }}"
          service_account: "${{ env.WIF_SERVICE_ACCOUNT }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v3"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth-cloudrun
        uses: "google-github-actions/auth@v2"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ env.CLOUDRUN_WIF_PROVIDER }}"
          service_account: "${{ env.CLOUDRUN_WIF_SERVICE_ACCOUNT }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.CLOUDRUN_SERVICE }}
          region: ${{ env.CLOUDRUN_REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}

      - name: Google Chat Notification
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: Deployed!
          url: ${{ env.GOOGLE_CHAT_WEBHOOK }}
          status: ${{ job.status }}
        if: always()
